#!/usr/bin/env python3


from random import randint, choice
import argparse
import pyperclip


def generate_password(args):
    """
    Generates a password configured by a set of options

    Args:
        length: desired password length
        alpha_toggle: enables alphabet characters
        numeric_toggle: enables numeric characters
        special_toggle: enables special characters
        define_special: alternative string of characters to use as special
                        characters
        no_copy: print to stdout instead of copying to clipboard
    """

    password = ""
    if args.length is None:
        args.length = 8
    while args.length > 0:
        flag = randint(1, 3)
        if flag == 1 and args.alpha:
            case = randint(1, 2)
            if case == 1:
                password = "".join([password, chr(randint(97, 122))])
            else:
                password = "".join([password, chr(randint(65, 90))])
            args.length -= 1
        elif flag == 2 and args.numeric:
            password = "".join([password, chr(randint(48, 57))])
            args.length -= 1
        elif flag == 3 and args.special:
            try:
                password = "".join([password, choice(args.define_special)])
            except:
                """Rather than trying to cherry pick only certain ascii codes
                 just define a list of **usually** acceptable special chars."""
                password = ''.join([password, choice('!@#$^&*()_+=-<>/\\')])
            args.length -= 1
    if args.nocopy:
        print(password)
    else:
        pyperclip.copy(password)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="Simple python based password generator", epilog="passgen (c) 2014-2015, Jordan Dunn.")
    parser.add_argument('-l', '--length', help="set password length", type=int)
    parser.add_argument('-a', '--alpha', help="enable alphabet characters", action="store_true")
    parser.add_argument('-n', '--numeric', help="enable numeric characters", action="store_true")
    parser.add_argument('-s', '--special', help="enable special characters", action="store_true")
    parser.add_argument('-ds', '--define_special', help="list of acceptable special characters", type=str)
    parser.add_argument('-nc', '--nocopy', help="print to console, not clipboard", action="store_true")
    args = parser.parse_args()
    generate_password(args)
