#!/usr/bin/env python3


import random
import argparse
import pyperclip


def generate_password(length, alpha_toggle, numeric_toggle, special_toggle, define_special, no_copy):
    password = ""
    while length > 0:
        sentinel = random.randint(1, 3)
        if sentinel == 1 and alpha_toggle:
            case_toggle = random.randint(1, 2)
            if case_toggle == 1:
                password = ''.join([password, chr(random.randint(97, 122))])
            else:
                password = ''.join([password, chr(random.randint(65, 90))])
            length -= 1
        elif sentinel == 2 and numeric_toggle:
            password = ''.join([password, chr(random.randint(48, 57))])
            length -= 1
        elif sentinel == 3 and special_toggle:
            try:
                password = ''.join([password, random.choice(define_special)])
            except:
                """Rather than trying to cherry pick only certain ascii codes
                 just define a list of **usually** acceptable special chars."""
                password = ''.join([password, random.choice('!@#$^&*()_+=-<>/\\')])
            length -= 1
    if no_copy:
        print(password)
    else:
        pyperclip.copy(password)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="Simple python based password generator")
    parser.add_argument('-l', '--length', help="set password length", type=int)
    parser.add_argument('-a', '--alpha', help="enable alphabet characters", action="store_true")
    parser.add_argument('-n', '--numeric', help="enable numeric characters", action="store_true")
    parser.add_argument('-s', '--special', help="enable special characters", action="store_true")
    parser.add_argument('-ds', '--define_special', help="list of acceptable special characters", type=str)
    parser.add_argument('-nc', '--nocopy', help="print to console, not clipboard", action="store_true")
    args = parser.parse_args()
    generate_password(args.length, args.alpha, args.numeric, args.special, args.define_special, args.nocopy)
